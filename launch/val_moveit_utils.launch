<?xml version="1.0"?>
<!--***********************************************************
	Val MoveIt Utils
	Emily Sheetz, NSTGRO VTE 2023

	run:
		$ roslaunch val_moveit_planner_executor val_moveit_utils.launch
************************************************************-->
<launch>

	<arg name="use_rviz" default="true"/>
	<arg name="use_rqt" default="false"/>

	<!-- specify mode for running Val MoveIt demo -->
	<!-- supported modes are "robot", "scs", or "rviz" -->
	<!-- mode determines which support services and additional nodes are launched -->
	<arg name="mode" default="robot"/>

	<!-- if running on robot, no need to simulate robot running -->
	<arg if="$(eval mode == 'robot')" name="robot_running" value="true"/>
	<arg if="$(eval mode == 'robot')" name="simulate_robot_running" value="false"/>
	<!-- if testing with SCS, initialize params to simulate robot running-->
	<arg if="$(eval mode == 'scs')" name="robot_running" value="false"/>
	<arg if="$(eval mode == 'scs')" name="simulate_robot_running" value="true"/>
	<!-- if running only in RViz without robot or SCS, do not simulate robot running and use default MoveIt demo -->
	<arg if="$(eval mode == 'rviz')" name="robot_running" value="false"/>
	<arg if="$(eval mode == 'rviz')" name="simulate_robot_running" value="false"/>

	<arg name="allow_sensors" default="true"/>

	<!-- NOTE this happens in valkyrie_gui as well, but because we're loading the same exact URDF to the same parameter, this is ok -->
	<!-- Ensure we have the correct robot description since multisense overwrites it -->
	<param name="robot_description" textfile="$(find val_description)/model/urdf/valkyrie_visual.urdf"/>

	<!-- robot running! be careful about loading robot descriptions! -->
	<group if="$(arg robot_running)">
		<!-- launch node to filter joint states -->
		<include file="$(find val_moveit_planner_executor)/launch/moveit_filter_joint_states_node.launch"/>
		<!-- launch robot_demo in val_moveit_config -->
		<include file="$(find val_moveit_config)/launch/robot_demo.launch">
			<arg name="allow_sensors" value="$(arg allow_sensors)"/>
			<arg name="use_rviz" value="$(arg use_rviz)"/>
		</include>
		<!-- launch MoveIt collision detector and collision modification services for Val -->
		<include file="$(find val_moveit_planner_executor)/launch/moveit_collision_detector.launch"/>
	</group>

	<!-- robot is not running, may need to launch additional support nodes -->
	<group unless="$(arg robot_running)">
		<!-- pretend robot is running -->
		<group if="$(arg simulate_robot_running)">
			<!-- load robot descriptions to simulate descriptions on ros param server when Val is running -->
			<include file="$(find val_moveit_config)/launch/test_robot_descriptions_NOT_ON_CONSOLE.launch"/>
			<!-- launch node to filter joint states -->
			<include file="$(find val_moveit_planner_executor)/launch/moveit_filter_joint_states_node.launch"/>
			<!-- launch robot_demo in val_moveit_config -->
			<include file="$(find val_moveit_config)/launch/robot_demo.launch">
				<arg name="allow_sensors" value="$(arg allow_sensors)"/>
				<arg name="use_rviz" value="$(arg use_rviz)"/>
			</include>
			<!-- launch MoveIt collision detector and collision modification services for Val -->
			<include file="$(find val_moveit_planner_executor)/launch/moveit_collision_detector.launch"/>
		</group>

		<!-- do not pretend robot is running -->
		<group unless="$(arg simulate_robot_running)">
			<!-- launch regular demo in val_moveit_config; loads robot descriptions itself -->
			<include file="$(find val_moveit_config)/launch/demo.launch"/>
		</group>
	</group>

	<!-- launch MoveIt services for Val -->
	<include file="$(find val_moveit_planner_executor)/launch/moveit_planner_executor_server_node.launch"/>

	<!-- launch IM node that uses MoveIt services for Val (mostly makes sure execution is properly routed to IHMC) -->
	<include file="$(find val_moveit_planner_executor)/launch/arm_goal_interactive_marker_node.launch">
		<arg name="use_rqt" value="$(arg use_rqt)"/>
	</include>

	<!-- launch IHMC message interface node -->
	<include file="$(find ihmc_msg_interface)/ihmc_launch/ihmc_interface_node.launch"/>

</launch>
